#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BBBoss.DataContexts
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BBBoss")]
	public partial class BBBoss_SQLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertModel(Model instance);
    partial void UpdateModel(Model instance);
    partial void DeleteModel(Model instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertQuote(Quote instance);
    partial void UpdateQuote(Quote instance);
    partial void DeleteQuote(Quote instance);
    partial void Inserttest(test instance);
    partial void Updatetest(test instance);
    partial void Deletetest(test instance);
    #endregion
		
		public BBBoss_SQLDataContext() :
                base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BBBossConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BBBoss_SQLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BBBoss_SQLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BBBoss_SQLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BBBoss_SQLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Model> Models
		{
			get
			{
				return this.GetTable<Model>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<Quote> Quotes
		{
			get
			{
				return this.GetTable<Quote>();
			}
		}
		
		public System.Data.Linq.Table<test> tests
		{
			get
			{
				return this.GetTable<test>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accounts")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountId;
		
		private string _Email;
		
		private string _LastName;
		
		private string _FirstName;
		
		private System.Nullable<int> _PhoneNum;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _State;
		
		private int _Zip;
		
		private string _ReferralCode;
		
		private EntitySet<Order> _Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnPhoneNumChanging(System.Nullable<int> value);
    partial void OnPhoneNumChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(int value);
    partial void OnZipChanged();
    partial void OnReferralCodeChanging(string value);
    partial void OnReferralCodeChanged();
    #endregion
		
		public Account()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNum", DbType="Int")]
		public System.Nullable<int> PhoneNum
		{
			get
			{
				return this._PhoneNum;
			}
			set
			{
				if ((this._PhoneNum != value))
				{
					this.OnPhoneNumChanging(value);
					this.SendPropertyChanging();
					this._PhoneNum = value;
					this.SendPropertyChanged("PhoneNum");
					this.OnPhoneNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(255)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="Int NOT NULL")]
		public int Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferralCode", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string ReferralCode
		{
			get
			{
				return this._ReferralCode;
			}
			set
			{
				if ((this._ReferralCode != value))
				{
					this.OnReferralCodeChanging(value);
					this.SendPropertyChanging();
					this._ReferralCode = value;
					this.SendPropertyChanged("ReferralCode");
					this.OnReferralCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Order", Storage="_Orders", ThisKey="AccountId", OtherKey="AccountId")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Models")]
	public partial class Model : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Brand;
		
		private string _Model1;
		
		private string _Carrier;
		
		private System.Nullable<int> _Size;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<Quote> _Quotes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnModel1Changing(string value);
    partial void OnModel1Changed();
    partial void OnCarrierChanging(string value);
    partial void OnCarrierChanged();
    partial void OnSizeChanging(System.Nullable<int> value);
    partial void OnSizeChanged();
    #endregion
		
		public Model()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._Quotes = new EntitySet<Quote>(new Action<Quote>(this.attach_Quotes), new Action<Quote>(this.detach_Quotes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(255)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Model", Storage="_Model1", DbType="VarChar(255)")]
		public string Model1
		{
			get
			{
				return this._Model1;
			}
			set
			{
				if ((this._Model1 != value))
				{
					this.OnModel1Changing(value);
					this.SendPropertyChanging();
					this._Model1 = value;
					this.SendPropertyChanged("Model1");
					this.OnModel1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Carrier", DbType="VarChar(255)")]
		public string Carrier
		{
			get
			{
				return this._Carrier;
			}
			set
			{
				if ((this._Carrier != value))
				{
					this.OnCarrierChanging(value);
					this.SendPropertyChanging();
					this._Carrier = value;
					this.SendPropertyChanged("Carrier");
					this.OnCarrierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Int")]
		public System.Nullable<int> Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Model_Order", Storage="_Orders", ThisKey="Id", OtherKey="ModelId")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Model_Quote", Storage="_Quotes", ThisKey="Id", OtherKey="ModelId")]
		public EntitySet<Quote> Quotes
		{
			get
			{
				return this._Quotes;
			}
			set
			{
				this._Quotes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Model = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Model = null;
		}
		
		private void attach_Quotes(Quote entity)
		{
			this.SendPropertyChanging();
			entity.Model = this;
		}
		
		private void detach_Quotes(Quote entity)
		{
			this.SendPropertyChanging();
			entity.Model = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderId;
		
		private System.Nullable<int> _AccountId;
		
		private System.Nullable<int> _ModelId;
		
		private string _ESN;
		
		private double _PostedPrice;
		
		private double _AdjustedPrice;
		
		private string _ShipStatus;
		
		private System.DateTime _DateRecieved;
		
		private System.Nullable<System.DateTime> _DateShipped;
		
		private System.Nullable<System.DateTime> _DateConfirmed;
		
		private string _Payment;
		
		private string _ReferralCode;
		
		private string _PostalRouting;
		
		private string _TrackingNumber;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Model> _Model;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    partial void OnModelIdChanging(System.Nullable<int> value);
    partial void OnModelIdChanged();
    partial void OnESNChanging(string value);
    partial void OnESNChanged();
    partial void OnPostedPriceChanging(double value);
    partial void OnPostedPriceChanged();
    partial void OnAdjustedPriceChanging(double value);
    partial void OnAdjustedPriceChanged();
    partial void OnShipStatusChanging(string value);
    partial void OnShipStatusChanged();
    partial void OnDateRecievedChanging(System.DateTime value);
    partial void OnDateRecievedChanged();
    partial void OnDateShippedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateShippedChanged();
    partial void OnDateConfirmedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateConfirmedChanged();
    partial void OnPaymentChanging(string value);
    partial void OnPaymentChanged();
    partial void OnReferralCodeChanging(string value);
    partial void OnReferralCodeChanged();
    partial void OnPostalRoutingChanging(string value);
    partial void OnPostalRoutingChanged();
    partial void OnTrackingNumberChanging(string value);
    partial void OnTrackingNumberChanged();
    #endregion
		
		public Order()
		{
			this._Account = default(EntityRef<Account>);
			this._Model = default(EntityRef<Model>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelId", DbType="Int")]
		public System.Nullable<int> ModelId
		{
			get
			{
				return this._ModelId;
			}
			set
			{
				if ((this._ModelId != value))
				{
					if (this._Model.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModelIdChanging(value);
					this.SendPropertyChanging();
					this._ModelId = value;
					this.SendPropertyChanged("ModelId");
					this.OnModelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESN", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ESN
		{
			get
			{
				return this._ESN;
			}
			set
			{
				if ((this._ESN != value))
				{
					this.OnESNChanging(value);
					this.SendPropertyChanging();
					this._ESN = value;
					this.SendPropertyChanged("ESN");
					this.OnESNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostedPrice", DbType="Float NOT NULL")]
		public double PostedPrice
		{
			get
			{
				return this._PostedPrice;
			}
			set
			{
				if ((this._PostedPrice != value))
				{
					this.OnPostedPriceChanging(value);
					this.SendPropertyChanging();
					this._PostedPrice = value;
					this.SendPropertyChanged("PostedPrice");
					this.OnPostedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustedPrice", DbType="Float NOT NULL")]
		public double AdjustedPrice
		{
			get
			{
				return this._AdjustedPrice;
			}
			set
			{
				if ((this._AdjustedPrice != value))
				{
					this.OnAdjustedPriceChanging(value);
					this.SendPropertyChanging();
					this._AdjustedPrice = value;
					this.SendPropertyChanged("AdjustedPrice");
					this.OnAdjustedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipStatus", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ShipStatus
		{
			get
			{
				return this._ShipStatus;
			}
			set
			{
				if ((this._ShipStatus != value))
				{
					this.OnShipStatusChanging(value);
					this.SendPropertyChanging();
					this._ShipStatus = value;
					this.SendPropertyChanged("ShipStatus");
					this.OnShipStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRecieved", DbType="DateTime NOT NULL")]
		public System.DateTime DateRecieved
		{
			get
			{
				return this._DateRecieved;
			}
			set
			{
				if ((this._DateRecieved != value))
				{
					this.OnDateRecievedChanging(value);
					this.SendPropertyChanging();
					this._DateRecieved = value;
					this.SendPropertyChanged("DateRecieved");
					this.OnDateRecievedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateShipped", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateShipped
		{
			get
			{
				return this._DateShipped;
			}
			set
			{
				if ((this._DateShipped != value))
				{
					this.OnDateShippedChanging(value);
					this.SendPropertyChanging();
					this._DateShipped = value;
					this.SendPropertyChanged("DateShipped");
					this.OnDateShippedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateConfirmed", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateConfirmed
		{
			get
			{
				return this._DateConfirmed;
			}
			set
			{
				if ((this._DateConfirmed != value))
				{
					this.OnDateConfirmedChanging(value);
					this.SendPropertyChanging();
					this._DateConfirmed = value;
					this.SendPropertyChanged("DateConfirmed");
					this.OnDateConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				if ((this._Payment != value))
				{
					this.OnPaymentChanging(value);
					this.SendPropertyChanging();
					this._Payment = value;
					this.SendPropertyChanged("Payment");
					this.OnPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferralCode", DbType="VarChar(255)")]
		public string ReferralCode
		{
			get
			{
				return this._ReferralCode;
			}
			set
			{
				if ((this._ReferralCode != value))
				{
					this.OnReferralCodeChanging(value);
					this.SendPropertyChanging();
					this._ReferralCode = value;
					this.SendPropertyChanged("ReferralCode");
					this.OnReferralCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalRouting", DbType="VarChar(255)")]
		public string PostalRouting
		{
			get
			{
				return this._PostalRouting;
			}
			set
			{
				if ((this._PostalRouting != value))
				{
					this.OnPostalRoutingChanging(value);
					this.SendPropertyChanging();
					this._PostalRouting = value;
					this.SendPropertyChanged("PostalRouting");
					this.OnPostalRoutingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingNumber", DbType="VarChar(255)")]
		public string TrackingNumber
		{
			get
			{
				return this._TrackingNumber;
			}
			set
			{
				if ((this._TrackingNumber != value))
				{
					this.OnTrackingNumberChanging(value);
					this.SendPropertyChanging();
					this._TrackingNumber = value;
					this.SendPropertyChanged("TrackingNumber");
					this.OnTrackingNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Order", Storage="_Account", ThisKey="AccountId", OtherKey="AccountId", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._AccountId = value.AccountId;
					}
					else
					{
						this._AccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Model_Order", Storage="_Model", ThisKey="ModelId", OtherKey="Id", IsForeignKey=true)]
		public Model Model
		{
			get
			{
				return this._Model.Entity;
			}
			set
			{
				Model previousValue = this._Model.Entity;
				if (((previousValue != value) 
							|| (this._Model.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Model.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Model.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._ModelId = value.Id;
					}
					else
					{
						this._ModelId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Model");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quotes")]
	public partial class Quote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModelId;
		
		private int _Mint;
		
		private int _Good;
		
		private int _Poor;
		
		private int _Broken;
		
		private int _Dead;
		
		private EntityRef<Model> _Model;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelIdChanging(int value);
    partial void OnModelIdChanged();
    partial void OnMintChanging(int value);
    partial void OnMintChanged();
    partial void OnGoodChanging(int value);
    partial void OnGoodChanged();
    partial void OnPoorChanging(int value);
    partial void OnPoorChanged();
    partial void OnBrokenChanging(int value);
    partial void OnBrokenChanged();
    partial void OnDeadChanging(int value);
    partial void OnDeadChanged();
    #endregion
		
		public Quote()
		{
			this._Model = default(EntityRef<Model>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ModelId
		{
			get
			{
				return this._ModelId;
			}
			set
			{
				if ((this._ModelId != value))
				{
					if (this._Model.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModelIdChanging(value);
					this.SendPropertyChanging();
					this._ModelId = value;
					this.SendPropertyChanged("ModelId");
					this.OnModelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mint", DbType="Int NOT NULL")]
		public int Mint
		{
			get
			{
				return this._Mint;
			}
			set
			{
				if ((this._Mint != value))
				{
					this.OnMintChanging(value);
					this.SendPropertyChanging();
					this._Mint = value;
					this.SendPropertyChanged("Mint");
					this.OnMintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Good", DbType="Int NOT NULL")]
		public int Good
		{
			get
			{
				return this._Good;
			}
			set
			{
				if ((this._Good != value))
				{
					this.OnGoodChanging(value);
					this.SendPropertyChanging();
					this._Good = value;
					this.SendPropertyChanged("Good");
					this.OnGoodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Poor", DbType="Int NOT NULL")]
		public int Poor
		{
			get
			{
				return this._Poor;
			}
			set
			{
				if ((this._Poor != value))
				{
					this.OnPoorChanging(value);
					this.SendPropertyChanging();
					this._Poor = value;
					this.SendPropertyChanged("Poor");
					this.OnPoorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Broken", DbType="Int NOT NULL")]
		public int Broken
		{
			get
			{
				return this._Broken;
			}
			set
			{
				if ((this._Broken != value))
				{
					this.OnBrokenChanging(value);
					this.SendPropertyChanging();
					this._Broken = value;
					this.SendPropertyChanged("Broken");
					this.OnBrokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dead", DbType="Int NOT NULL")]
		public int Dead
		{
			get
			{
				return this._Dead;
			}
			set
			{
				if ((this._Dead != value))
				{
					this.OnDeadChanging(value);
					this.SendPropertyChanging();
					this._Dead = value;
					this.SendPropertyChanged("Dead");
					this.OnDeadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Model_Quote", Storage="_Model", ThisKey="ModelId", OtherKey="Id", IsForeignKey=true)]
		public Model Model
		{
			get
			{
				return this._Model.Entity;
			}
			set
			{
				Model previousValue = this._Model.Entity;
				if (((previousValue != value) 
							|| (this._Model.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Model.Entity = null;
						previousValue.Quotes.Remove(this);
					}
					this._Model.Entity = value;
					if ((value != null))
					{
						value.Quotes.Add(this);
						this._ModelId = value.Id;
					}
					else
					{
						this._ModelId = default(int);
					}
					this.SendPropertyChanged("Model");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.test")]
	public partial class test : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _shtuff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnshtuffChanging(string value);
    partial void OnshtuffChanged();
    #endregion
		
		public test()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shtuff", DbType="VarChar(255)")]
		public string shtuff
		{
			get
			{
				return this._shtuff;
			}
			set
			{
				if ((this._shtuff != value))
				{
					this.OnshtuffChanging(value);
					this.SendPropertyChanging();
					this._shtuff = value;
					this.SendPropertyChanged("shtuff");
					this.OnshtuffChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
